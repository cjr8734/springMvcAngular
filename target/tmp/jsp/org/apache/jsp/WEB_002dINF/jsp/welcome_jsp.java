/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.6.v20170531
 * Generated at: 2017-09-05 18:33:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class welcome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(8);
    _jspx_dependants.put("file:/C:/Users/cjrey/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1504634054500L));
    _jspx_dependants.put("jar:file:/C:/Users/cjrey/.m2/repository/org/springframework/spring-webmvc/4.3.10.RELEASE/spring-webmvc-4.3.10.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1500565206000L));
    _jspx_dependants.put("/WEB-INF/jsp/stdJspIncludes.jsp", Long.valueOf(1504621195078L));
    _jspx_dependants.put("file:/C:/Users/cjrey/.m2/repository/net/jawr/jawr-core/3.8/jawr-core-3.8.jar", Long.valueOf(1504620884065L));
    _jspx_dependants.put("jar:file:/C:/Users/cjrey/.m2/repository/org/springframework/spring-webmvc/4.3.10.RELEASE/spring-webmvc-4.3.10.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1500565206000L));
    _jspx_dependants.put("jar:file:/C:/Users/cjrey/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("file:/C:/Users/cjrey/.m2/repository/org/springframework/spring-webmvc/4.3.10.RELEASE/spring-webmvc-4.3.10.RELEASE.jar", Long.valueOf(1503943127432L));
    _jspx_dependants.put("jar:file:/C:/Users/cjrey/.m2/repository/net/jawr/jawr-core/3.8/jawr-core-3.8.jar!/META-INF/jawr.tld", Long.valueOf(1440798472000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        ");
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\" data-ng-app=\"notesApp\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Welcome Page</title>\r\n");
      out.write("    <style>\r\n");
      out.write("              .map {\r\n");
      out.write("                height: 400px;\r\n");
      out.write("                width: 100%;\r\n");
      out.write("              }\r\n");
      out.write("    </style>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://openlayers.org/en/v4.3.1/css/ol.css\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body data-ng-controller=\"MainCtrl as ctrl\" data-ng-app=\"notesApp\">\r\n");
      out.write("\r\n");
      out.write("    <h2>welcome2.jsp</h2>\r\n");
      out.write("\r\n");
      out.write("    Hello {{1 + 1}}nd time AngularJS\r\n");
      out.write("    <br/>\r\n");
      out.write("    <br/>\r\n");
      out.write("    Database time is ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" <br/>\r\n");
      out.write("    ctrl.helloMessage={{ctrl.helloMessage}}  <br/>\r\n");
      out.write("    ctrl.byeMessage={{ctrl.byeMessage}} <br/>\r\n");
      out.write("\r\n");
      out.write("    ctrl.message={{ctrl.message}}<br/>\r\n");
      out.write("\r\n");
      out.write("    <button ng-click=\"ctrl.clearMessage()\">Clear Message</button>&nbsp;&nbsp;\r\n");
      out.write("    <button ng-click=\"ctrl.changeMessage()\">Change Message</button>\r\n");
      out.write("\r\n");
      out.write("    <br/>\r\n");
      out.write("    <br/>\r\n");
      out.write("\r\n");
      out.write("    <table width=\"300\" cellpadding=\"1\" cellspacing=\"2\" style=\"border: 1px solid black\">\r\n");
      out.write("       <tr>\r\n");
      out.write("         <th>&nbsp;</th>\r\n");
      out.write("         <th>label</th>\r\n");
      out.write("         <th>status</th>\r\n");
      out.write("       </tr>\r\n");
      out.write("\r\n");
      out.write("       <tr ng-repeat=\"note in ctrl.notes\">\r\n");
      out.write("          <td>{{$index + 1}}.</td>\r\n");
      out.write("          <td>{{note.label}}</td>\r\n");
      out.write("          <td>{{note.done}}</td>\r\n");
      out.write("       </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("    <br/><br/>\r\n");
      out.write("\r\n");
      out.write("    <div ng-repeat=\"note in ctrl.notes\">\r\n");
      out.write("       <span style=\"color:#000\" class=\"label\" ng-bind=\"note.label\"></span>\r\n");
      out.write("       <span class=\"status\" ng-bind=\"note.done\"></span>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <br/><br/>\r\n");
      out.write("\r\n");
      out.write("    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/example/angular1\">Angular example #1 - Simple Controller</a> <br/>\r\n");
      out.write("    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/example/angular2\">Angular example #2 - guessing game</a> <br/>\r\n");
      out.write("    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/example/angular3\">Angular example #3 - select2 dropdown</a> <br/>\r\n");
      out.write("    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/example/angular4\">Angular example #4 - page with a timer</a> <br/>\r\n");
      out.write("    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/example/angular5\">Angular example #5 - select2 page with a timer</a> <br/>\r\n");
      out.write("    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/example/angular6\">Angular example #6 - Show $location info</a> <br/>\r\n");
      out.write("    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/example/angular7\">Angular example #7 - Share Data Between 2 Controllers</a> <br/>\r\n");
      out.write("\r\n");
      out.write("    <br/>\r\n");
      out.write("\r\n");
      out.write("    <h2>My Map</h2>\r\n");
      out.write("    <div id=\"map\" class=\"map\"></div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/OpenLayers/ol.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        var notesApp = angular.module('notesApp', []);\r\n");
      out.write("\r\n");
      out.write("        notesApp.controller('MainCtrl', [function ()\r\n");
      out.write("         {\r\n");
      out.write("             console.log('MainCtrl has been created.');\r\n");
      out.write("             var self = this;\r\n");
      out.write("\r\n");
      out.write("             self.helloMessage = 'Hello';\r\n");
      out.write("             self.byeMessage = 'Goodbye';\r\n");
      out.write("             self.message = 'Hello!';\r\n");
      out.write("\r\n");
      out.write("            self.notes = [\r\n");
      out.write("               {id: 1, label: 'First Note', done: false},\r\n");
      out.write("               {id: 2, label: 'Second Note', done: true},\r\n");
      out.write("               {id: 3, label: '3rd note', done: true},\r\n");
      out.write("               {id: 4, label: '4th note', done: false}\r\n");
      out.write("            ];\r\n");
      out.write("\r\n");
      out.write("             self.changeMessage = function()\r\n");
      out.write("             {\r\n");
      out.write("                self.message = \"Goodbye\";\r\n");
      out.write("             };\r\n");
      out.write("\r\n");
      out.write("             self.clearMessage = function()\r\n");
      out.write("             {\r\n");
      out.write("                self.message = \"\";\r\n");
      out.write("             };\r\n");
      out.write("         }\r\n");
      out.write("         ]);\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("          var map = new ol.Map({\r\n");
      out.write("            target: 'map',\r\n");
      out.write("            layers: [\r\n");
      out.write("              new ol.layer.Tile({\r\n");
      out.write("                source: new ol.source.OSM()\r\n");
      out.write("              })\r\n");
      out.write("            ],\r\n");
      out.write("            view: new ol.View({\r\n");
      out.write("              center: ol.proj.fromLonLat([-77.037, 38.907]),\r\n");
      out.write("              zoom: 10\r\n");
      out.write("            })\r\n");
      out.write("          });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/jsp/stdJspIncludes.jsp(10,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/jsp/stdJspIncludes.jsp(10,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/stdJspIncludes.jsp(10,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    }
    return false;
  }
}
